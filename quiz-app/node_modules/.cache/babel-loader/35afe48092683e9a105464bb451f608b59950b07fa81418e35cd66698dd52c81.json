{"ast":null,"code":"// import React from 'react'\n// import {useEffect,useState} from \"react\";\n\n// import \"./app1.css\"\n// import Quiz from \"./components/quiz\"\n// import Timer from \"./components/timer\"\n// import Start from \"./components/start\"\n\n// const App = () => {\n//   const [userName,setUserName]=useState(null);\n//   const [questionNumber,setQuestionNumber]=useState(1);\n//   const [stop,setStop]= useState(false);\n//   const [earned,setEarned]=useState(\"$ 0\");\n\n//   const data = [\n//     {\n//       id: 1,\n//       question: \"Rolex is a company that specializes in what type of product?\",\n//       answers: [\n//         {\n//           text: \"Phone\",\n//           correct: false,\n//         },\n//         {\n//           text: \"Watches\",\n//           correct: true,\n//         },\n//         {\n//           text: \"Food\",\n//           correct: false,\n//         },\n//         {\n//           text: \"Cosmetic\",\n//           correct: false,\n//         },\n//       ],\n//     },\n//     {\n//       id: 2,\n//       question: \"When did the website `Facebook` launch?\",\n//       answers: [\n//         {\n//           text: \"2004\",\n//           correct: true,\n//         },\n//         {\n//           text: \"2005\",\n//           correct: false,\n//         },\n//         {\n//           text: \"2006\",\n//           correct: false,\n//         },\n//         {\n//           text: \"2007\",\n//           correct: false,\n//         },\n//       ],\n//     },\n//     {\n//       id: 3,\n//       question: \"Who played the character of harry potter in movie?\",\n//       answers: [\n//         {\n//           text: \"Johnny Deep\",\n//           correct: false,\n//         },\n//         {\n//           text: \"Leonardo Di Caprio\",\n//           correct: false,\n//         },\n//         {\n//           text: \"Denzel Washington\",\n//           correct: false,\n//         },\n//         {\n//           text: \"Daniel Red Cliff\",\n//           correct: true,\n//         },\n//       ],\n//     },\n//   ];\n\n//   const moneyPyramid=[\n//     { id: 1, amount: \"$ 100\" },\n//         { id: 2, amount: \"$ 200\" },\n//         { id: 3, amount: \"$ 300\" },\n//         { id: 4, amount: \"$ 500\" },\n//         { id: 5, amount: \"$ 1000\" },\n//         { id: 6, amount: \"$ 2000\" },\n//         { id: 7, amount: \"$ 4000\" },\n//         { id: 8, amount: \"$ 8000\" },\n//         { id: 9, amount: \"$ 16000\" },\n//         { id: 10, amount: \"$ 32000\" },\n//         { id: 11, amount: \"$ 64000\" },\n//         { id: 12, amount: \"$ 125000\" },\n//         { id: 13, amount: \"$ 250000\" },\n//         { id: 14, amount: \"$ 500000\" },\n//         { id: 15, amount: \"$ 1000000\" },\n//       ].reverse();\n\n//     useEffect(()=>{\n//       questionNumber>1 && \n//       setEarned(moneyPyramid.find((m)=>m.id===questionNumber-1).amount);\n//     },[moneyPyramid,questionNumber]);\n\n//     return (\n//       <div className=\"app\">\n//         {userName ? (\n//           <Start setUserName={setUserName} />\n//         ) : (\n//           <>\n//             <div className=\"main\">\n//               {stop ? (\n//                 <h1 className=\"endText\">You earned: {earned}</h1>\n//               ) : (\n//                 <>\n//                   <div className=\"top\">\n//                     <div className=\"timer\">\n//                       <Timer\n//                         setStop={setStop}\n//                         questionNumber={questionNumber}\n//                       />\n//                     </div>\n//                   </div>\n//                   <div className=\"bottom\">\n//                     <Quiz\n//                       data={data}\n//                       questionNumber={questionNumber}\n//                       setQuestionNumber={setQuestionNumber}\n//                       setStop={setStop}\n//                     />\n//                   </div>\n//                 </>\n//               )}\n//             </div>\n//             <div className=\"pyramid\">\n//               <ul className=\"moneyList\">\n//                 {moneyPyramid.map((m) => (\n//                   <li\n//                     className={\n//                       questionNumber === m.id\n//                         ? \"moneyListItem active\"\n//                         : \"moneyListItem\"\n//                     }\n//                   >\n//                     <span className=\"moneyListItemNumber\">{m.id}</span>\n//                     <span className=\"moneyListItemAmount\">{m.amount}</span>\n//                   </li>\n//                 ))}\n//               </ul>\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     );\n//   }\n\n//   export default App;","map":{"version":3,"names":[],"sources":["C:/Users/hp/Desktop/reactjs/firstmajor/simranreact/src/App.jsx"],"sourcesContent":["// import React from 'react'\n// import {useEffect,useState} from \"react\";\n\n// import \"./app1.css\"\n// import Quiz from \"./components/quiz\"\n// import Timer from \"./components/timer\"\n// import Start from \"./components/start\"\n\n\n// const App = () => {\n//   const [userName,setUserName]=useState(null);\n//   const [questionNumber,setQuestionNumber]=useState(1);\n//   const [stop,setStop]= useState(false);\n//   const [earned,setEarned]=useState(\"$ 0\");\n\n//   const data = [\n//     {\n//       id: 1,\n//       question: \"Rolex is a company that specializes in what type of product?\",\n//       answers: [\n//         {\n//           text: \"Phone\",\n//           correct: false,\n//         },\n//         {\n//           text: \"Watches\",\n//           correct: true,\n//         },\n//         {\n//           text: \"Food\",\n//           correct: false,\n//         },\n//         {\n//           text: \"Cosmetic\",\n//           correct: false,\n//         },\n//       ],\n//     },\n//     {\n//       id: 2,\n//       question: \"When did the website `Facebook` launch?\",\n//       answers: [\n//         {\n//           text: \"2004\",\n//           correct: true,\n//         },\n//         {\n//           text: \"2005\",\n//           correct: false,\n//         },\n//         {\n//           text: \"2006\",\n//           correct: false,\n//         },\n//         {\n//           text: \"2007\",\n//           correct: false,\n//         },\n//       ],\n//     },\n//     {\n//       id: 3,\n//       question: \"Who played the character of harry potter in movie?\",\n//       answers: [\n//         {\n//           text: \"Johnny Deep\",\n//           correct: false,\n//         },\n//         {\n//           text: \"Leonardo Di Caprio\",\n//           correct: false,\n//         },\n//         {\n//           text: \"Denzel Washington\",\n//           correct: false,\n//         },\n//         {\n//           text: \"Daniel Red Cliff\",\n//           correct: true,\n//         },\n//       ],\n//     },\n//   ];\n\n\n//   const moneyPyramid=[\n//     { id: 1, amount: \"$ 100\" },\n//         { id: 2, amount: \"$ 200\" },\n//         { id: 3, amount: \"$ 300\" },\n//         { id: 4, amount: \"$ 500\" },\n//         { id: 5, amount: \"$ 1000\" },\n//         { id: 6, amount: \"$ 2000\" },\n//         { id: 7, amount: \"$ 4000\" },\n//         { id: 8, amount: \"$ 8000\" },\n//         { id: 9, amount: \"$ 16000\" },\n//         { id: 10, amount: \"$ 32000\" },\n//         { id: 11, amount: \"$ 64000\" },\n//         { id: 12, amount: \"$ 125000\" },\n//         { id: 13, amount: \"$ 250000\" },\n//         { id: 14, amount: \"$ 500000\" },\n//         { id: 15, amount: \"$ 1000000\" },\n//       ].reverse();\n\n//     useEffect(()=>{\n//       questionNumber>1 && \n//       setEarned(moneyPyramid.find((m)=>m.id===questionNumber-1).amount);\n//     },[moneyPyramid,questionNumber]);\n      \n    \n  \n//     return (\n//       <div className=\"app\">\n//         {userName ? (\n//           <Start setUserName={setUserName} />\n//         ) : (\n//           <>\n//             <div className=\"main\">\n//               {stop ? (\n//                 <h1 className=\"endText\">You earned: {earned}</h1>\n//               ) : (\n//                 <>\n//                   <div className=\"top\">\n//                     <div className=\"timer\">\n//                       <Timer\n//                         setStop={setStop}\n//                         questionNumber={questionNumber}\n//                       />\n//                     </div>\n//                   </div>\n//                   <div className=\"bottom\">\n//                     <Quiz\n//                       data={data}\n//                       questionNumber={questionNumber}\n//                       setQuestionNumber={setQuestionNumber}\n//                       setStop={setStop}\n//                     />\n//                   </div>\n//                 </>\n//               )}\n//             </div>\n//             <div className=\"pyramid\">\n//               <ul className=\"moneyList\">\n//                 {moneyPyramid.map((m) => (\n//                   <li\n//                     className={\n//                       questionNumber === m.id\n//                         ? \"moneyListItem active\"\n//                         : \"moneyListItem\"\n//                     }\n//                   >\n//                     <span className=\"moneyListItemNumber\">{m.id}</span>\n//                     <span className=\"moneyListItemAmount\">{m.amount}</span>\n//                   </li>\n//                 ))}\n//               </ul>\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     );\n//   }\n  \n//   export default App;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}