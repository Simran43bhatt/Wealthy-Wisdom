{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\reactjs\\\\firstmajor\\\\simranreact\\\\src\\\\components\\\\quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Howl } from \"howler\";\nimport play from \"../assets/play.mp3\";\nimport correct from \"../assets/correct.mp3\";\nimport wrong from \"../assets/wrong.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz({\n  data,\n  questionNumber,\n  setQuestionNumber,\n  setTimeOut\n}) {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [className, setClassName] = useState(\"answer\");\n  const playSound = new Howl({\n    src: [play]\n  });\n  const correctSound = new Howl({\n    src: [correct]\n  });\n  const wrongSound = new Howl({\n    src: [wrong]\n  });\n  useEffect(() => {\n    playSound.play();\n  }, []);\n  useEffect(() => {\n    setQuestion(data[questionNumber - 1]);\n  }, [data, questionNumber]);\n  const delay = (duration, callback) => {\n    setTimeout(callback, duration);\n  };\n  const handleClick = a => {\n    setSelectedAnswer(a);\n    setClassName(\"answer active\");\n    delay(3000, () => {\n      setClassName(a.correct ? \"answer correct\" : \"answer wrong\");\n      delay(3000, () => {\n        if (a.correct) {\n          correctSound.play();\n          delay(1000, () => {\n            setQuestionNumber(prev => prev + 1);\n            setSelectedAnswer(null);\n          });\n        } else {\n          wrongSound.play();\n          delay(1000, () => {\n            setTimeOut(true);\n          });\n        }\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: question === null || question === void 0 ? void 0 : question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: question === null || question === void 0 ? void 0 : question.answers.map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: selectedAnswer === a ? className : \"answer\",\n        onClick: () => !selectedAnswer && handleClick(a),\n        children: a.text\n      }, a.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"S0vMFPJfkQ8SmTWIGTFxIAeij5Q=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","Howl","play","correct","wrong","jsxDEV","_jsxDEV","Quiz","data","questionNumber","setQuestionNumber","setTimeOut","_s","question","setQuestion","selectedAnswer","setSelectedAnswer","className","setClassName","playSound","src","correctSound","wrongSound","delay","duration","callback","setTimeout","handleClick","a","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","answers","map","onClick","text","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/reactjs/firstmajor/simranreact/src/components/quiz.jsx"],"sourcesContent":["\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Howl } from \"howler\";\r\nimport play from \"../assets/play.mp3\";\r\nimport correct from \"../assets/correct.mp3\";\r\nimport wrong from \"../assets/wrong.mp3\";\r\n\r\nexport default function Quiz({\r\n  data,\r\n  questionNumber,\r\n  setQuestionNumber,\r\n  setTimeOut,\r\n}) {\r\n  const [question, setQuestion] = useState(null);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [className, setClassName] = useState(\"answer\");\r\n\r\n  const playSound = new Howl({ src: [play] });\r\n  const correctSound = new Howl({ src: [correct] });\r\n  const wrongSound = new Howl({ src: [wrong] });\r\n\r\n  useEffect(() => {\r\n    playSound.play();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setQuestion(data[questionNumber - 1]);\r\n  }, [data, questionNumber]);\r\n\r\n  const delay = (duration, callback) => {\r\n    setTimeout(callback, duration);\r\n  };\r\n\r\n  const handleClick = (a) => {\r\n    setSelectedAnswer(a);\r\n    setClassName(\"answer active\");\r\n    delay(3000, () => {\r\n      setClassName(a.correct ? \"answer correct\" : \"answer wrong\");\r\n      delay(3000, () => {\r\n        if (a.correct) {\r\n          correctSound.play();\r\n          delay(1000, () => {\r\n            setQuestionNumber((prev) => prev + 1);\r\n            setSelectedAnswer(null);\r\n          });\r\n        } else {\r\n          wrongSound.play();\r\n          delay(1000, () => {\r\n            setTimeOut(true);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz\">\r\n      <div className=\"question\">{question?.question}</div>\r\n      <div className=\"answers\">\r\n        {question?.answers.map((a) => (\r\n          <div\r\n            key={a.text}\r\n            className={selectedAnswer === a ? className : \"answer\"}\r\n            onClick={() => !selectedAnswer && handleClick(a)}\r\n          >\r\n            {a.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}