{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\reactjs\\\\firstmajor\\\\simranreact\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport \"./app1.css\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport Start from \"./components/start\";\nimport Timer from \"./components/timer\";\nimport Quiz from \"./components/quiz\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(null);\n  const [timeOut, setTimeOut] = useState(false);\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [earned, setEarned] = useState(\"$ 0\");\n  const data = [{\n    id: 1,\n    question: \"Which planet is known as the Red Planet?\",\n    answers: [{\n      text: \"Mercury\",\n      correct: false\n    }, {\n      text: \"Mars\",\n      correct: true\n    }, {\n      text: \"Jupiter\",\n      correct: false\n    }, {\n      text: \"Saturn\",\n      correct: false\n    }]\n  }, {\n    id: 2,\n    question: \"Who wrote the play 'Romeo and Juliet'?\",\n    answers: [{\n      text: \"William Wordsworth\",\n      correct: false\n    }, {\n      text: \"William Shakespeare\",\n      correct: true\n    }, {\n      text: \"John Milton\",\n      correct: false\n    }, {\n      text: \"Jane Austen\",\n      correct: false\n    }]\n  }, {\n    id: 3,\n    question: \"What is the capital city of Australia?\",\n    answers: [{\n      text: \"Sydney\",\n      correct: false\n    }, {\n      text: \"Canberra\",\n      correct: true\n    }, {\n      text: \"Melbourne\",\n      correct: false\n    }, {\n      text: \"Brisbane\",\n      correct: false\n    }]\n  }, {\n    id: 4,\n    question: \"In which year did World War II end?\",\n    answers: [{\n      text: \"1943\",\n      correct: false\n    }, {\n      text: \"1944\",\n      correct: false\n    }, {\n      text: \"1945\",\n      correct: true\n    }, {\n      text: \"1946\",\n      correct: false\n    }]\n  }, {\n    id: 5,\n    question: \"Which famous artist painted the Mona Lisa?\",\n    answers: [{\n      text: \"Vincent van Gogh\",\n      correct: false\n    }, {\n      text: \"Leonardo da Vinci\",\n      correct: true\n    }, {\n      text: \"Pablo Picasso\",\n      correct: false\n    }, {\n      text: \"Michelangelo\",\n      correct: false\n    }]\n  }, {\n    id: 6,\n    question: \"What is the largest organ in the human body?\",\n    answers: [{\n      text: \"Liver\",\n      correct: false\n    }, {\n      text: \"Heart\",\n      correct: false\n    }, {\n      text: \"Lungs\",\n      correct: false\n    }, {\n      text: \"Skin\",\n      correct: true\n    }]\n  }, {\n    id: 7,\n    question: \"Who was the first person to step on the Moon?\",\n    answers: [{\n      text: \"Neil Armstrong\",\n      correct: true\n    }, {\n      text: \"Buzz Aldrin\",\n      correct: false\n    }, {\n      text: \"Michael Collins\",\n      correct: false\n    }, {\n      text: \"Yuri Gagarin\",\n      correct: false\n    }]\n  }, {\n    id: 8,\n    question: \"What is the chemical symbol for gold?\",\n    answers: [{\n      text: \"Au\",\n      correct: true\n    }, {\n      text: \"Ag\",\n      correct: false\n    }, {\n      text: \"Pt\",\n      correct: false\n    }, {\n      text: \"Hg\",\n      correct: false\n    }]\n  }, {\n    id: 9,\n    question: \"Which ocean is the largest on Earth?\",\n    answers: [{\n      text: \"Atlantic Ocean\",\n      correct: false\n    }, {\n      text: \"Indian Ocean\",\n      correct: false\n    }, {\n      text: \"Arctic Ocean\",\n      correct: false\n    }, {\n      text: \"Pacific Ocean\",\n      correct: true\n    }]\n  }, {\n    id: 10,\n    question: \"Who is the author of the Harry Potter book series?\",\n    answers: [{\n      text: \"J.K. Rowling\",\n      correct: true\n    }, {\n      text: \"Stephen King\",\n      correct: false\n    }, {\n      text: \"George R.R. Martin\",\n      correct: false\n    }, {\n      text: \"J.R.R. Tolkien\",\n      correct: false\n    }]\n  }];\n  const moneyPyramid = useMemo(() => [{\n    id: 1,\n    amount: \"$ 100\"\n  }, {\n    id: 2,\n    amount: \"$ 200\"\n  }, {\n    id: 3,\n    amount: \"$ 300\"\n  }, {\n    id: 4,\n    amount: \"$ 500\"\n  }, {\n    id: 5,\n    amount: \"$ 1000\"\n  }, {\n    id: 6,\n    amount: \"$ 2000\"\n  }, {\n    id: 7,\n    amount: \"$ 4000\"\n  }, {\n    id: 8,\n    amount: \"$ 8000\"\n  }, {\n    id: 9,\n    amount: \"$ 16000\"\n  }, {\n    id: 10,\n    amount: \"$ 32000\"\n  }, {\n    id: 11,\n    amount: \"$ 64000\"\n  }, {\n    id: 12,\n    amount: \"$ 125000\"\n  }, {\n    id: 13,\n    amount: \"$ 250000\"\n  }, {\n    id: 14,\n    amount: \"$ 500000\"\n  }, {\n    id: 15,\n    amount: \"$ 1000000\"\n  }].reverse(), []);\n  useEffect(() => {\n    questionNumber > 1 && setEarned(moneyPyramid.find(m => m.id === questionNumber - 1).amount);\n  }, [questionNumber, moneyPyramid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: !username ? /*#__PURE__*/_jsxDEV(Start, {\n      setUsername: setUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: timeOut ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"endText\",\n          children: [\"You earned: \", earned]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer\",\n              children: /*#__PURE__*/_jsxDEV(Timer, {\n                setTimeOut: setTimeOut,\n                questionNumber: questionNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom\",\n            children: /*#__PURE__*/_jsxDEV(Quiz, {\n              data: data,\n              questionNumber: questionNumber,\n              setQuestionNumber: setQuestionNumber,\n              setTimeOut: setTimeOut\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pyramid\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"moneyList\",\n          children: moneyPyramid.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: questionNumber === m.id ? \"moneyListItem active\" : \"moneyListItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"moneyListItemNumber\",\n              children: m.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"moneyListItemAmount\",\n              children: m.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jMJZLw/40L6RkwYGngv4ut0DxYw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useMemo","useState","Start","Timer","Quiz","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","timeOut","setTimeOut","questionNumber","setQuestionNumber","earned","setEarned","data","id","question","answers","text","correct","moneyPyramid","amount","reverse","find","m","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/reactjs/firstmajor/simranreact/src/App.jsx"],"sourcesContent":["import \"./app1.css\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport Start from \"./components/start\";\nimport Timer from \"./components/timer\";\nimport Quiz from \"./components/quiz\";\n\nfunction App() {\n  const [username, setUsername] = useState(null);\n  const [timeOut, setTimeOut] = useState(false);\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [earned, setEarned] = useState(\"$ 0\");\n\n\n\n\n  const data = [\n    {\n      id: 1,\n      question: \"Which planet is known as the Red Planet?\",\n      answers: [\n        {\n          text: \"Mercury\",\n          correct: false,\n        },\n        {\n          text: \"Mars\",\n          correct: true,\n        },\n        {\n          text: \"Jupiter\",\n          correct: false,\n        },\n        {\n          text: \"Saturn\",\n          correct: false,\n        },\n      ],\n    },\n    {\n      id: 2,\n      question: \"Who wrote the play 'Romeo and Juliet'?\",\n      answers: [\n        {\n          text: \"William Wordsworth\",\n          correct: false,\n        },\n        {\n          text: \"William Shakespeare\",\n          correct: true,\n        },\n        {\n          text: \"John Milton\",\n          correct: false,\n        },\n        {\n          text: \"Jane Austen\",\n          correct: false,\n        },\n      ],\n    },\n    {\n      id: 3,\n      question: \"What is the capital city of Australia?\",\n      answers: [\n        {\n          text: \"Sydney\",\n          correct: false,\n        },\n        {\n          text: \"Canberra\",\n          correct: true,\n        },\n        {\n          text: \"Melbourne\",\n          correct: false,\n        },\n        {\n          text: \"Brisbane\",\n          correct: false,\n        },\n      ],\n    },\n    {\n      id: 4,\n      question: \"In which year did World War II end?\",\n      answers: [\n        {\n          text: \"1943\",\n          correct: false,\n        },\n        {\n          text: \"1944\",\n          correct: false,\n        },\n        {\n          text: \"1945\",\n          correct: true,\n        },\n        {\n          text: \"1946\",\n          correct: false,\n        },\n      ],\n    },\n    {\n      id: 5,\n      question: \"Which famous artist painted the Mona Lisa?\",\n      answers: [\n        {\n          text: \"Vincent van Gogh\",\n          correct: false,\n        },\n        {\n          text: \"Leonardo da Vinci\",\n          correct: true,\n        },\n        {\n          text: \"Pablo Picasso\",\n          correct: false,\n        },\n        {\n          text: \"Michelangelo\",\n          correct: false,\n        },\n      ],\n    },\n    {\n      id: 6,\n      question: \"What is the largest organ in the human body?\",\n      answers: [\n        {\n          text: \"Liver\",\n          correct: false,\n        },\n        {\n          text: \"Heart\",\n          correct: false,\n        },\n        {\n          text: \"Lungs\",\n          correct: false,\n        },\n        {\n          text: \"Skin\",\n          correct: true,\n        },\n      ],\n    },\n    {\n      id: 7,\n      question: \"Who was the first person to step on the Moon?\",\n      answers: [\n        {\n          text: \"Neil Armstrong\",\n          correct: true,\n        },\n        {\n          text: \"Buzz Aldrin\",\n          correct: false,\n        },\n        {\n          text: \"Michael Collins\",\n          correct: false,\n        },\n        {\n          text: \"Yuri Gagarin\",\n          correct: false,\n        },\n      ],\n    },\n    {\n      id: 8,\n      question: \"What is the chemical symbol for gold?\",\n      answers: [\n        {\n          text: \"Au\",\n          correct: true,\n        },\n        {\n          text: \"Ag\",\n          correct: false,\n        },\n        {\n          text: \"Pt\",\n          correct: false,\n        },\n        {\n          text: \"Hg\",\n          correct: false,\n        },\n      ],\n    },\n    {\n      id: 9,\n      question: \"Which ocean is the largest on Earth?\",\n      answers: [\n        {\n          text: \"Atlantic Ocean\",\n          correct: false,\n        },\n        {\n          text: \"Indian Ocean\",\n          correct: false,\n        },\n        {\n          text: \"Arctic Ocean\",\n          correct: false,\n        },\n        {\n          text: \"Pacific Ocean\",\n          correct: true,\n        },\n      ],\n    },\n    {\n      id: 10,\n      question: \"Who is the author of the Harry Potter book series?\",\n      answers: [\n        {\n          text: \"J.K. Rowling\",\n          correct: true,\n        },\n        {\n          text: \"Stephen King\",\n          correct: false,\n        },\n        {\n          text: \"George R.R. Martin\",\n          correct: false,\n        },\n        {\n          text: \"J.R.R. Tolkien\",\n          correct: false,\n        },\n      ],\n    },\n  ];\n  \n\n  \n\n  const moneyPyramid = useMemo(\n    () =>\n      [\n        { id: 1, amount: \"$ 100\" },\n        { id: 2, amount: \"$ 200\" },\n        { id: 3, amount: \"$ 300\" },\n        { id: 4, amount: \"$ 500\" },\n        { id: 5, amount: \"$ 1000\" },\n        { id: 6, amount: \"$ 2000\" },\n        { id: 7, amount: \"$ 4000\" },\n        { id: 8, amount: \"$ 8000\" },\n        { id: 9, amount: \"$ 16000\" },\n        { id: 10, amount: \"$ 32000\" },\n        { id: 11, amount: \"$ 64000\" },\n        { id: 12, amount: \"$ 125000\" },\n        { id: 13, amount: \"$ 250000\" },\n        { id: 14, amount: \"$ 500000\" },\n        { id: 15, amount: \"$ 1000000\" },\n      ].reverse(),\n    []\n  );\n\n  useEffect(() => {\n    questionNumber > 1 &&\n      setEarned(moneyPyramid.find((m) => m.id === questionNumber - 1).amount);\n  }, [questionNumber, moneyPyramid]);\n\n  return (\n    <div className=\"app\">\n      {!username ? (\n        <Start setUsername={setUsername} />\n      ) : (\n        <>\n          <div className=\"main\">\n            {timeOut ? (\n              <h1 className=\"endText\">You earned: {earned}</h1>\n            ) : (\n              <>\n                <div className=\"top\">\n                  <div className=\"timer\">\n                    <Timer\n                      setTimeOut={setTimeOut}\n                      questionNumber={questionNumber}\n                    />\n                  </div>\n                </div>\n                <div className=\"bottom\">\n                  <Quiz\n                    data={data}\n                    questionNumber={questionNumber}\n                    setQuestionNumber={setQuestionNumber}\n                    setTimeOut={setTimeOut}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n          <div className=\"pyramid\">\n            <ul className=\"moneyList\">\n              {moneyPyramid.map((m) => (\n                <li\n                  className={\n                    questionNumber === m.id\n                      ? \"moneyListItem active\"\n                      : \"moneyListItem\"\n                  }\n                >\n                  <span className=\"moneyListItemNumber\">{m.id}</span>\n                  <span className=\"moneyListItemAmount\">{m.amount}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}