{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\reactjs\\\\firstmajor\\\\simranreact\\\\src\\\\components\\\\start.jsx\",\n  _s = $RefreshSig$();\n// export default function Start() {\n//   return (\n//     <div>\n//       <div className=\"start\">\n//         <input type=\"Enter Your Name\" className=\"startInput\" />\n//         <button className=\"startButton\">Start</button>\n//       </div>\n//     </div>\n//   )\n// }\n\n// import React, { useRef } from \"react\";\n\n// export default function Start({ setUsername }) {\n//   const inputRef = useRef(null); // Initialize useRef with null or undefined\n\n//   const handleClick = () => {\n//     // Check if inputRef current value exists before setting username\n//     inputRef.current && setUsername(inputRef.current.value);\n//   };\n\n//   return (\n//     <div className=\"start\">\n//       <input\n//         placeholder=\"enter your name\"\n//         className=\"startInput\"\n//         ref={inputRef}\n//       />\n//       <button className=\"startButton\" onClick={handleClick}>\n//         Start\n//       </button>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Start({\n  setUsername\n}) {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleClick = () => {\n    if (inputValue.trim() !== \"\") {\n      setUsername(inputValue.trim());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"start\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter your name\",\n      className: \"startInput\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"startButton\",\n      onClick: handleClick,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Start, \"iEYviHCJXqr/rxvP+SpzgvyJcbo=\");\n_c = Start;\nvar _c;\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Start","setUsername","_s","inputValue","setInputValue","handleClick","trim","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/reactjs/firstmajor/simranreact/src/components/start.jsx"],"sourcesContent":["// export default function Start() {\r\n//   return (\r\n//     <div>\r\n//       <div className=\"start\">\r\n//         <input type=\"Enter Your Name\" className=\"startInput\" />\r\n//         <button className=\"startButton\">Start</button>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// import React, { useRef } from \"react\";\r\n\r\n// export default function Start({ setUsername }) {\r\n//   const inputRef = useRef(null); // Initialize useRef with null or undefined\r\n\r\n//   const handleClick = () => {\r\n//     // Check if inputRef current value exists before setting username\r\n//     inputRef.current && setUsername(inputRef.current.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"start\">\r\n//       <input\r\n//         placeholder=\"enter your name\"\r\n//         className=\"startInput\"\r\n//         ref={inputRef}\r\n//       />\r\n//       <button className=\"startButton\" onClick={handleClick}>\r\n//         Start\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function Start({ setUsername }) {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    if (inputValue.trim() !== \"\") {\r\n      setUsername(inputValue.trim());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"start\">\r\n      <input\r\n        placeholder=\"Enter your name\"\r\n        className=\"startInput\"\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n      />\r\n      <button className=\"startButton\" onClick={handleClick}>\r\n        Start\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIF,UAAU,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5BL,WAAW,CAACE,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;IAChC;EACF,CAAC;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBT,OAAA;MACEU,WAAW,EAAC,iBAAiB;MAC7BF,SAAS,EAAC,YAAY;MACtBG,KAAK,EAAEP,UAAW;MAClBQ,QAAQ,EAAGC,CAAC,IAAKR,aAAa,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFlB,OAAA;MAAQQ,SAAS,EAAC,aAAa;MAACW,OAAO,EAAEb,WAAY;MAAAG,QAAA,EAAC;IAEtD;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACf,EAAA,CAtBuBF,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}